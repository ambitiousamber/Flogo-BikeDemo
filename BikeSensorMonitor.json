{
    "name": "BikeSensorMonitor",
    "description": " ",
    "version": "1.0.0",
    "type": "flogo:app",
    "appModel": "1.0.0",
    "feVersion": "2.5.0",
    "resources": [
        {
            "id": "flow:AntSensorHandler",
            "data": {
                "name": "AntSensorHandler",
                "description": "",
                "tasks": [
                    {
                        "id": "LogMessageAntMsg",
                        "name": "LogMessageAntMsg",
                        "activity": {
                            "ref": "git.tibco.com/git/product/ipaas/wi-contrib.git/contributions/General/activity/log",
                            "settings": {},
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": ""
                            },
                            "output": {},
                            "mappings": {
                                "input": [
                                    {
                                        "mapTo": "$INPUT['message']",
                                        "type": "expression",
                                        "value": "string.concat(\"received message from ant+: device type = \", string.tostring($flow.deviceType), \" message = \", $flow.message)"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "activity": {
                            "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/actreturn",
                            "settings": {},
                            "input": {},
                            "output": {}
                        }
                    },
                    {
                        "id": "LogHRMsgPageNo",
                        "name": "LogHRMsgPageNo",
                        "activity": {
                            "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/log",
                            "settings": {},
                            "input": {
                                "message": "",
                                "flowInfo": false,
                                "addToFlow": false
                            },
                            "output": {},
                            "mappings": {
                                "input": [
                                    {
                                        "mapTo": "$INPUT['message']",
                                        "type": "expression",
                                        "value": "string.concat(\"Heartrate message received - page # \", string.substring($flow.message, 1, 1))"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "id": "DecodeHeartRate",
                        "name": "DecodeHeartRate",
                        "activity": {
                            "ref": "HexConverter/activity/hexConverter",
                            "settings": {},
                            "input": {
                                "hexBytes": ""
                            },
                            "output": {},
                            "mappings": {
                                "input": [
                                    {
                                        "mapTo": "$INPUT['hexBytes']",
                                        "type": "expression",
                                        "value": "string.substring($flow.message, 14, 2)"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "id": "MQTTPubHRMsg",
                        "name": "MQTTPubHRMsg",
                        "activity": {
                            "ref": "git.tibco.com/git/product/ipaas/wi-mqtt.git/Mqtt/activity/publish",
                            "settings": {},
                            "input": {
                                "Connection": {
                                    "id": "bf5dfac0-6cf7-11e9-8173-6b3462e4d93e",
                                    "type": "flogo:connector",
                                    "version": "1.0.0",
                                    "name": "connection",
                                    "inputMappings": {},
                                    "outputMappings": {},
                                    "iteratorMappings": {},
                                    "title": "MQTT Connector",
                                    "description": "MQTT Connector",
                                    "ref": "git.tibco.com/git/product/ipaas/wi-mqtt.git/Mqtt/connector/connection",
                                    "settings": [
                                        {
                                            "name": "name",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Connection Name",
                                                "visible": true
                                            },
                                            "value": "LocalMQTT"
                                        },
                                        {
                                            "name": "description",
                                            "type": "string",
                                            "display": {
                                                "name": "Description",
                                                "visible": true
                                            },
                                            "value": "Local MQTT server"
                                        },
                                        {
                                            "name": "broker",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Broker URL",
                                                "visible": true,
                                                "Description": "Enter a broker URL in the form '<protocol>://<host>:<port>'"
                                            },
                                            "value": "tcp://192.168.224.165:1883"
                                        },
                                        {
                                            "name": "user",
                                            "type": "string",
                                            "required": false,
                                            "display": {
                                                "name": "Username",
                                                "visible": true,
                                                "Description": "Enter a username if this connection requires one"
                                            },
                                            "value": "dtredinnick"
                                        },
                                        {
                                            "name": "password",
                                            "type": "string",
                                            "required": false,
                                            "display": {
                                                "name": "Password",
                                                "visible": true,
                                                "type": "password",
                                                "encryptable": true,
                                                "Description": "Enter a password if this connection requires one"
                                            },
                                            "value": "SECRET:karfnc7HZviE+r9kVL/5ftxUHTfkVYJJIg=="
                                        },
                                        {
                                            "name": "encryptionMode",
                                            "type": "string",
                                            "display": {
                                                "name": "Encryption Mode",
                                                "description": "Choose the type of authentication to use"
                                            },
                                            "allowed": [
                                                "None",
                                                "TLS-Cert",
                                                "TLS-ClientAuth"
                                            ],
                                            "value": "None"
                                        },
                                        {
                                            "name": "cacert",
                                            "type": "string",
                                            "required": false,
                                            "display": {
                                                "name": "Cacert",
                                                "description": "Select the CA certificate file used to sign the broker's certificate",
                                                "visible": false,
                                                "type": "fileselector",
                                                "fileExtensions": [
                                                    ".crt",
                                                    ".cert",
                                                    ".pem"
                                                ],
                                                "readonly": false,
                                                "valid": true
                                            },
                                            "value": ""
                                        },
                                        {
                                            "name": "clientcert",
                                            "type": "string",
                                            "required": false,
                                            "display": {
                                                "name": "Client Cert",
                                                "description": "Select the client certificate file for connections requiring client auth",
                                                "visible": false,
                                                "type": "fileselector",
                                                "fileExtensions": [
                                                    ".crt",
                                                    ".cert",
                                                    ".pem"
                                                ],
                                                "readonly": false,
                                                "valid": true
                                            },
                                            "value": ""
                                        },
                                        {
                                            "name": "clientkey",
                                            "type": "string",
                                            "required": false,
                                            "display": {
                                                "name": "Client Key",
                                                "description": "Select the client key file used for connections requiring client auth",
                                                "visible": false,
                                                "type": "fileselector",
                                                "fileExtensions": [
                                                    ".key",
                                                    ".pem"
                                                ],
                                                "readonly": false,
                                                "valid": true
                                            },
                                            "value": ""
                                        }
                                    ],
                                    "outputs": [],
                                    "inputs": [],
                                    "handler": {
                                        "settings": []
                                    },
                                    "reply": [],
                                    "s3Prefix": "Tibco",
                                    "key": "Tibco/Mqtt/connector/connection/connector.json",
                                    "display": {
                                        "description": "MQTT Connector",
                                        "category": "Mqtt",
                                        "smallIcon": "icons/mqtt.png",
                                        "largeIcon": "icons/mqtt.png",
                                        "visible": true
                                    },
                                    "actions": [
                                        {
                                            "name": "Save"
                                        }
                                    ],
                                    "feature": {},
                                    "propertyMap": {},
                                    "keyfield": "name",
                                    "isValid": true,
                                    "lastUpdatedTime": 1557259194946,
                                    "user": "flogo",
                                    "connectorName": "LocalMQTT",
                                    "connectorDescription": " "
                                },
                                "topic": "org.teamtibco.bikesensor.data",
                                "retain": false,
                                "qos": 0,
                                "valueType": "String",
                                "stringValue": ""
                            },
                            "output": {},
                            "mappings": {
                                "input": [
                                    {
                                        "mapTo": "$INPUT['stringValue']",
                                        "type": "expression",
                                        "value": "string.concat(\"{\\\"device\\\":\", string.tostring($flow.deviceType) , \",  \\\"heartRate\\\": \", string.tostring($activity[DecodeHeartRate].result), \"}\")"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "id": "Return1",
                        "name": "Return1",
                        "activity": {
                            "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/actreturn",
                            "settings": {},
                            "input": {},
                            "output": {}
                        }
                    },
                    {
                        "id": "LogNonDataHRPage",
                        "name": "LogNonDataHRPage",
                        "activity": {
                            "ref": "git.tibco.com/git/product/ipaas/wi-contrib.git/contributions/General/activity/log",
                            "settings": {},
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": ""
                            },
                            "output": {},
                            "mappings": {
                                "input": [
                                    {
                                        "mapTo": "$INPUT['message']",
                                        "type": "expression",
                                        "value": "string.concat(\"Non-data page received - Heart Rate Message = \", $flow.message)"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "id": "Return3",
                        "name": "Return3",
                        "activity": {
                            "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/actreturn",
                            "settings": {},
                            "input": {},
                            "output": {}
                        }
                    },
                    {
                        "id": "LogCadenceMsgPgNo",
                        "name": "LogCadenceMsgPgNo",
                        "activity": {
                            "ref": "git.tibco.com/git/product/ipaas/wi-contrib.git/contributions/General/activity/log",
                            "settings": {},
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": ""
                            },
                            "output": {},
                            "mappings": {
                                "input": [
                                    {
                                        "mapTo": "$INPUT['message']",
                                        "type": "expression",
                                        "value": "string.concat(\"Cadence message received - page # \", string.substring($flow.message, 1, 1))"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "id": "DecodeCadenceTimeValue",
                        "name": "DecodeCadenceTimeValue",
                        "activity": {
                            "ref": "HexConverter/activity/hexConverter",
                            "settings": {},
                            "input": {
                                "hexBytes": ""
                            },
                            "output": {},
                            "mappings": {
                                "input": [
                                    {
                                        "mapTo": "$INPUT['hexBytes']",
                                        "type": "expression",
                                        "value": "string.concat(string.substring($flow.message, 10, 2),string.substring($flow.message, 8, 2)) "
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "id": "DecodeCrankRevs",
                        "name": "DecodeCrankRevs",
                        "activity": {
                            "ref": "HexConverter/activity/hexConverter",
                            "settings": {},
                            "input": {
                                "hexBytes": ""
                            },
                            "output": {},
                            "mappings": {
                                "input": [
                                    {
                                        "mapTo": "$INPUT['hexBytes']",
                                        "type": "expression",
                                        "value": "string.concat(string.substring($flow.message, 14, 2),string.substring($flow.message, 12, 2))"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "id": "MQTTPubCadMsg",
                        "name": "MQTTPubCadMsg",
                        "activity": {
                            "ref": "git.tibco.com/git/product/ipaas/wi-mqtt.git/Mqtt/activity/publish",
                            "settings": {},
                            "input": {
                                "Connection": {
                                    "id": "bf5dfac0-6cf7-11e9-8173-6b3462e4d93e",
                                    "type": "flogo:connector",
                                    "version": "1.0.0",
                                    "name": "connection",
                                    "inputMappings": {},
                                    "outputMappings": {},
                                    "iteratorMappings": {},
                                    "title": "MQTT Connector",
                                    "description": "MQTT Connector",
                                    "ref": "git.tibco.com/git/product/ipaas/wi-mqtt.git/Mqtt/connector/connection",
                                    "settings": [
                                        {
                                            "name": "name",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Connection Name",
                                                "visible": true
                                            },
                                            "value": "LocalMQTT"
                                        },
                                        {
                                            "name": "description",
                                            "type": "string",
                                            "display": {
                                                "name": "Description",
                                                "visible": true
                                            },
                                            "value": "Local MQTT server"
                                        },
                                        {
                                            "name": "broker",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Broker URL",
                                                "visible": true,
                                                "Description": "Enter a broker URL in the form '<protocol>://<host>:<port>'"
                                            },
                                            "value": "tcp://192.168.224.165:1883"
                                        },
                                        {
                                            "name": "user",
                                            "type": "string",
                                            "required": false,
                                            "display": {
                                                "name": "Username",
                                                "visible": true,
                                                "Description": "Enter a username if this connection requires one"
                                            },
                                            "value": "dtredinnick"
                                        },
                                        {
                                            "name": "password",
                                            "type": "string",
                                            "required": false,
                                            "display": {
                                                "name": "Password",
                                                "visible": true,
                                                "type": "password",
                                                "encryptable": true,
                                                "Description": "Enter a password if this connection requires one"
                                            },
                                            "value": "SECRET:s+iF3mVX0MzUn9Mjsyw5roaStrshdJXevw=="
                                        },
                                        {
                                            "name": "encryptionMode",
                                            "type": "string",
                                            "display": {
                                                "name": "Encryption Mode",
                                                "description": "Choose the type of authentication to use"
                                            },
                                            "allowed": [
                                                "None",
                                                "TLS-Cert",
                                                "TLS-ClientAuth"
                                            ],
                                            "value": "None"
                                        },
                                        {
                                            "name": "cacert",
                                            "type": "string",
                                            "required": false,
                                            "display": {
                                                "name": "Cacert",
                                                "description": "Select the CA certificate file used to sign the broker's certificate",
                                                "visible": false,
                                                "type": "fileselector",
                                                "fileExtensions": [
                                                    ".crt",
                                                    ".cert",
                                                    ".pem"
                                                ],
                                                "readonly": false,
                                                "valid": true
                                            },
                                            "value": ""
                                        },
                                        {
                                            "name": "clientcert",
                                            "type": "string",
                                            "required": false,
                                            "display": {
                                                "name": "Client Cert",
                                                "description": "Select the client certificate file for connections requiring client auth",
                                                "visible": false,
                                                "type": "fileselector",
                                                "fileExtensions": [
                                                    ".crt",
                                                    ".cert",
                                                    ".pem"
                                                ],
                                                "readonly": false,
                                                "valid": true
                                            },
                                            "value": ""
                                        },
                                        {
                                            "name": "clientkey",
                                            "type": "string",
                                            "required": false,
                                            "display": {
                                                "name": "Client Key",
                                                "description": "Select the client key file used for connections requiring client auth",
                                                "visible": false,
                                                "type": "fileselector",
                                                "fileExtensions": [
                                                    ".key",
                                                    ".pem"
                                                ],
                                                "readonly": false,
                                                "valid": true
                                            },
                                            "value": ""
                                        }
                                    ],
                                    "outputs": [],
                                    "inputs": [],
                                    "handler": {
                                        "settings": []
                                    },
                                    "reply": [],
                                    "s3Prefix": "Tibco",
                                    "key": "Tibco/Mqtt/connector/connection/connector.json",
                                    "display": {
                                        "description": "MQTT Connector",
                                        "category": "Mqtt",
                                        "smallIcon": "icons/mqtt.png",
                                        "largeIcon": "icons/mqtt.png",
                                        "visible": true
                                    },
                                    "actions": [
                                        {
                                            "name": "Save"
                                        }
                                    ],
                                    "feature": {},
                                    "propertyMap": {},
                                    "keyfield": "name",
                                    "isValid": true,
                                    "lastUpdatedTime": 1557259194946,
                                    "user": "flogo",
                                    "connectorName": "LocalMQTT",
                                    "connectorDescription": " "
                                },
                                "topic": "org.teamtibco.bikesensor.data",
                                "retain": false,
                                "qos": 0,
                                "valueType": "String",
                                "stringValue": ""
                            },
                            "output": {},
                            "mappings": {
                                "input": [
                                    {
                                        "mapTo": "$INPUT['stringValue']",
                                        "type": "expression",
                                        "value": "string.concat(\"{\\\"device\\\":\", string.tostring($flow.deviceType) , \",  \\\"timeDelta\\\": \",  string.tostring($activity[DecodeCadenceTimeValue].result), \", \\\"revolutions\\\": \", string.tostring($activity[DecodeCrankRevs].result), \"}\")"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "id": "Return2",
                        "name": "Return2",
                        "activity": {
                            "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/actreturn",
                            "settings": {},
                            "input": {
                                "mappings": ""
                            },
                            "output": {}
                        }
                    },
                    {
                        "id": "LogNonDataCadPage",
                        "name": "LogNonDataCadPage",
                        "activity": {
                            "ref": "git.tibco.com/git/product/ipaas/wi-contrib.git/contributions/General/activity/log",
                            "settings": {},
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": ""
                            },
                            "output": {},
                            "mappings": {
                                "input": [
                                    {
                                        "mapTo": "$INPUT['message']",
                                        "type": "expression",
                                        "value": "string.concat(\"Non-data page received - Cadence Message = \", $flow.message)"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "id": "Return4",
                        "name": "Return4",
                        "activity": {
                            "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/actreturn",
                            "settings": {},
                            "input": {},
                            "output": {}
                        }
                    }
                ],
                "links": [
                    {
                        "id": 1,
                        "from": "LogMessageAntMsg",
                        "to": "Return",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "LogMessageAntMsg",
                        "to": "LogHRMsgPageNo",
                        "type": "expression",
                        "value": "$flow.deviceType == 120"
                    },
                    {
                        "id": 3,
                        "from": "LogHRMsgPageNo",
                        "to": "DecodeHeartRate",
                        "type": "default"
                    },
                    {
                        "id": 4,
                        "from": "DecodeHeartRate",
                        "to": "MQTTPubHRMsg",
                        "type": "default"
                    },
                    {
                        "id": 5,
                        "from": "MQTTPubHRMsg",
                        "to": "Return1",
                        "type": "default"
                    },
                    {
                        "id": 6,
                        "from": "LogHRMsgPageNo",
                        "to": "LogNonDataHRPage",
                        "type": "expression",
                        "value": "string.substring($flow.message, 1, 1) != \"4\""
                    },
                    {
                        "id": 7,
                        "from": "LogNonDataHRPage",
                        "to": "Return3",
                        "type": "default"
                    },
                    {
                        "id": 8,
                        "from": "LogMessageAntMsg",
                        "to": "LogCadenceMsgPgNo",
                        "type": "expression",
                        "value": "$flow.deviceType == 123"
                    },
                    {
                        "id": 9,
                        "from": "LogCadenceMsgPgNo",
                        "to": "DecodeCadenceTimeValue",
                        "type": "default"
                    },
                    {
                        "id": 10,
                        "from": "DecodeCadenceTimeValue",
                        "to": "DecodeCrankRevs",
                        "type": "default"
                    },
                    {
                        "id": 11,
                        "from": "DecodeCrankRevs",
                        "to": "MQTTPubCadMsg",
                        "type": "default"
                    },
                    {
                        "id": 12,
                        "from": "MQTTPubCadMsg",
                        "to": "Return2",
                        "type": "default"
                    },
                    {
                        "id": 13,
                        "from": "LogCadenceMsgPgNo",
                        "to": "LogNonDataCadPage",
                        "type": "expression",
                        "value": "string.substring($flow.message, 1, 1) != 0"
                    },
                    {
                        "id": 14,
                        "from": "LogNonDataCadPage",
                        "to": "Return4",
                        "type": "default"
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "deviceType",
                            "type": "number"
                        },
                        {
                            "name": "message",
                            "type": "string"
                        }
                    ],
                    "output": [],
                    "fe_metadata": {
                        "input": "{\n\t\"deviceType\": 120,\n\t\"message\": \"04FF63005C004A59\"\n}",
                        "output": ""
                    }
                }
            }
        }
    ],
    "triggers": [
        {
            "ref": "github.com/TIBCOSoftware/flogo-contrib/trigger/rest",
            "name": "ReceiveHTTPMessage",
            "description": "",
            "settings": {
                "port": 11088
            },
            "id": "ReceiveHTTPMessage",
            "handlers": [
                {
                    "description": "",
                    "settings": {
                        "method": "GET",
                        "path": "/sensor/reading?deviceType={deviceType}&message={message}"
                    },
                    "outputs": {
                        "params": "",
                        "pathParams": "",
                        "queryParams": "",
                        "header": "",
                        "content": ""
                    },
                    "action": {
                        "ref": "github.com/TIBCOSoftware/flogo-contrib/action/flow",
                        "data": {
                            "flowURI": "res://flow:AntSensorHandler"
                        },
                        "mappings": {
                            "input": [],
                            "output": []
                        }
                    },
                    "reply": {
                        "code": 200,
                        "data": "any"
                    }
                }
            ]
        }
    ],
    "properties": [
        {
            "name": "MQTT.URL",
            "type": "string",
            "value": "tcp://localhost:1883"
        },
        {
            "name": "MQTT.userd",
            "type": "string",
            "value": "dtredinnick"
        },
        {
            "name": "MQTT.password",
            "type": "string",
            "value": "SECRET:8ADjxs5B8t0YtVVJzOeTqQJwWHfOElBu7Q=="
        }
    ],
    "contrib": "W3sicmVmIjoiZ2l0aHViLmNvbS9USUJDT1NvZnR3YXJlL2Zsb2dvLWNvbnRyaWIvdHJpZ2dlci9yZXN0IiwiczNsb2NhdGlvbiI6IntVU0VSSUR9L0RlZmF1bHQvdHJpZ2dlci9yZXN0In0seyJyZWYiOiJnaXQudGliY28uY29tL2dpdC9wcm9kdWN0L2lwYWFzL3dpLWNvbnRyaWIuZ2l0L2NvbnRyaWJ1dGlvbnMvR2VuZXJhbCIsInMzbG9jYXRpb24iOiJUaWJjby9HZW5lcmFsIn0seyJyZWYiOiJnaXQudGliY28uY29tL2dpdC9wcm9kdWN0L2lwYWFzL3dpLW1xdHQuZ2l0L01xdHQiLCJzM2xvY2F0aW9uIjoiVGliY28vTXF0dCJ9LHsicmVmIjoiSGV4Q29udmVydGVyIiwiczNsb2NhdGlvbiI6IntVU0VSSUR9L0hleENvbnZlcnRlciJ9LHsicmVmIjoiZ2l0aHViLmNvbS9USUJDT1NvZnR3YXJlL2Zsb2dvLWNvbnRyaWIvYWN0aXZpdHkvbG9nIiwiczNsb2NhdGlvbiI6IntVU0VSSUR9L0RlZmF1bHQvYWN0aXZpdHkvbG9nIn1d",
    "fe_metadata": "UEsDBAoAAAAIAOahp06rqSRGFQAAABMAAAAIAAAAYXBwLmpzb26rViopykxPTy1yy8kvL1ayio6tBQBQSwECFAAKAAAACADmoadOq6kkRhUAAAATAAAACAAAAAAAAAAAAAAAAAAAAAAAYXBwLmpzb25QSwUGAAAAAAEAAQA2AAAAOwAAAAAA"
}